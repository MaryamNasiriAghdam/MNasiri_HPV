# <.....This project uses StringTie-IsoformSwitchAnalyzer pipeline......>


# To install and call libraries....................................

if (!require("BiocManager", quietly = TRUE))
  install.packages("BiocManager")

BiocManager::install("GenomeInfoDb")
BiocManager::install("DESeq2")
BiocManager::install("AnnotationDBi")
BiocManager::install("RColorBrewer")
BiocManager::install("ggplot2")



library(GenomeInfoDb)
library(DESeq2)
library(AnnotationDbi)
library(RColorBrewer)
library(ggplot2)

BiocManager::install(version='devel')
BiocManager::install("IsoformSwitchAnalyzeR")
packageVersion('IsoformSwitchAnalyzeR')

library(IsoformSwitchAnalyzeR)

BiocManager::install("BSgenome")
BiocManager::install("BSgenome.Hsapiens.UCSC.hg38")
library(BSgenome.Hsapiens.UCSC.hg38)

# To Import data from StringTie to IsoformSwitchAnalyzeR .......................

stringTieQuant <- importIsoformExpression(
  parentDir = "~/StringTie_16E5vsPLVX/",
  addIsofomIdAsColumn = FALSE, 
  readLength = 150
  )

myDesign <- data.frame(
  sampleID = colnames(stringTieQuant$abundance),
  condition = gsub('_.*', '', colnames(stringTieQuant$abundance))
)

myDesign

head(stringTieQuant$abundance, 2)
head(stringTieQuant$counts, 2)


switchAnalyzeRlist <- importRdata(
  isoformCountMatrix   = stringTieQuant$counts,
  isoformRepExpression = stringTieQuant$abundance,
  designMatrix         = myDesign,
  isoformExonAnnoation = "~/HAC_stringtie_merged.gtf",
  fixStringTieAnnotationProblem = TRUE
)


summary(switchAnalyzeRlist)


# To add annotations based on our reference genome, predict ORF.................

BiocManager::install("BSgenome.Hsapiens.UCSC.hg38")
library(BSgenome.Hsapiens.UCSC.hg38)
BSgenome.Hsapiens.UCSC.hg38
genome <- BSgenome.Hsapiens.UCSC.hg38


switchAnalyzeRlist <- isoformSwitchAnalysisPart1(
  switchAnalyzeRlist   = switchAnalyzeRlist,
  pathToGTF = '~/Homo_sapiens.GRCh38.102.gtf',
  pathToOutput = '~/StringTie_16E5vsPLVX/',
  outputSequences      = TRUE,
  genomeObject = genome,
  prepareForWebServers = FALSE
)


head(switchAnalyzeRlist$isoformFeatures,2)
head(switchAnalyzeRlist$exons,2)
head(switchAnalyzeRlist$ntSequence,2)



switchAnalyzeRlistFiltered <- preFilter(
  switchAnalyzeRlist = switchAnalyzeRlist,
  geneExpressionCutoff = 3,
  isoformExpressionCutoff = 1,
  removeSingleIsoformGenes = TRUE
)


switchAnalyzeRlistDEXSeq <- isoformSwitchTestDEXSeq(
  switchAnalyzeRlist = switchAnalyzeRlistFiltered,
  reduceToSwitchingGenes=TRUE
)

extractSwitchSummary(switchAnalyzeRlistDEXSeq)


switchAnalyzeRlistORF <- addORFfromGTF( switchAnalyzeRlistDEXSeq, 
                                        pathToGTF = '~/Homo_sapiens.GRCh38.102.gtf', 
                                        ignoreAfterPeriod = T)

"orfAnalysis" %in% names( switchAnalyzeRlistORF )



NovelIsoforms <- analyzeNovelIsoformORF(
  switchAnalyzeRlistORF, 
  analysisAllIsoformsWithoutORF = TRUE, 
  genomeObject = genome
)


# To Extract Sequences..........................................................

SwitchListAnalyzed <- extractSequence(
  NovelIsoforms, 
  genomeObject = genome, 
  pathToOutput = '~/StringTie_16E5vsPLVX',
  writeToFile = TRUE
)


# To Obtain results from external databases.....................................


SwitchListAnalyzedCPC2 <- analyzeCPC2(
  switchAnalyzeRlist   = SwitchListAnalyzed,
  pathToCPC2resultFile = '~/result_cpc2.txt',
  removeNoncodinORFs   = TRUE
)


SwitchListAnalyzedPfam <- analyzePFAM(
  switchAnalyzeRlist   = SwitchListAnalyzedCPC2,
  pathToPFAMresultFile = '~/result_Pfam.txt',
  showProgress=FALSE
)



SwitchListAnalyzedSignalP <- analyzeSignalP(
  switchAnalyzeRlist       = SwitchListAnalyzedPfam,
  pathToSignalPresultFile  = '~/result_SignalP.txt'
)


SwitchListAnalyzedIUPred <- analyzeIUPred2A(
  switchAnalyzeRlist        = SwitchListAnalyzedSignalP,
  pathToIUPred2AresultFile = '~/result_IUPred.txt',
  showProgress = FALSE
)


SwitchListAnalyzedIUPred



#To analyze the alternative splicing events and creating the figures............


SwitchListAnalyzedAS <- analyzeAlternativeSplicing(
  switchAnalyzeRlist = SwitchListAnalyzedIUPred,
  quiet=TRUE
)

table( SwitchListAnalyzedAS$AlternativeSplicingAnalysis$ES )


consequencesOfInterest <- c('intron_retention',
                            'coding_potential',
                            'NMD_status',
                            'domains_identified',
                            'ORF_seq_similarity')


SwitchListAnalyzedAS <- analyzeSwitchConsequences(
  SwitchListAnalyzedAS,
  consequencesToAnalyze = consequencesOfInterest, 
  dIFcutoff = 0.1,
  showProgress=FALSE
)



extractSplicingSummary(
  SwitchListAnalyzedAS,
  asFractionTotal = FALSE,
  plotGenes=TRUE
)



splicingEnrichment <- extractSplicingEnrichment(
  SwitchListAnalyzedAS,
  splicingToAnalyze='all',
  returnResult=TRUE,
  returnSummary=TRUE
)


extractSplicingGenomeWide(
  SwitchListAnalyzedAS,
  featureToExtract = 'all',
  splicingToAnalyze = 'all', 
  plot=TRUE,
  returnResult=FALSE
)


# To analyze isoform switch events and its figures..............................

extractTopSwitches(
  SwitchListAnalyzedAS, 
  filterForConsequences = FALSE, 
  n = 100, 
  sortByQvals = TRUE
)



switchingIso <- extractTopSwitches( 
  SwitchListAnalyzedAS, 
  filterForConsequences = FALSE, 
  n = NA,
  extractGenes = FALSE,
  sortByQvals = TRUE
)





switchingIso

subset(switchingIso, gene_name == 'BUD31')

switchPlot(SwitchListAnalyzedAS, gene = 'BUD31')

switchPlotTopSwitches(
  switchAnalyzeRlist = SwitchListAnalyzedAS, 
  n = Inf, 
  filterForConsequences = FALSE,
  fileType = "png",
  pathToOutput = "~/StringTie_16E5vsPLVX"
)


# To illustrate the genome wide analysis of consequences........................

extractConsequenceSummary(
  SwitchListAnalyzedAS, 
  asFractionTotal = FALSE
  )

# Fin
